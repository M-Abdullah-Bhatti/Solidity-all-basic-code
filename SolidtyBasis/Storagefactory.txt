// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./SimpleStorage.sol";

contract StorageFactory {
    // SimpleStorage public simpleStorage;

    // function createSimpleStorageContract() public {
    //     simpleStorage = new SimpleStorage();
    // }

    // if we want more than 1 contract

    SimpleStorage[] public simpleStorageArray;

    function createSimpleStorageContract() public {
        SimpleStorage simpleStorage = new SimpleStorage();
        simpleStorageArray.push(simpleStorage);
    }


    function sfStorage(uint256 _simpleStorageIndex, uint256 _simpleStorageNumber) public{
        // in order to store and retrieve contract we need:
        // Address
        // ABI -Application Binary Interface

       simpleStorageArray[_simpleStorageIndex].store(_simpleStorageNumber);

    }

     function sfGet(uint256 _simpleStorageIndex) public view returns(uint256){

        return simpleStorageArray[_simpleStorageIndex].retrieve();

    }


}